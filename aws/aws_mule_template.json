{
    "Description": "Creating the EC2 Intances with Docker containers for Mule Runtime",
    "Mappings": {
        "RegionMap": {
            "eu-west-1": { "AMI": "ami-c39604b0" },
			"ap-southeast-2": { "AMI": "ami-d9d7f9ba" }
        }
    },
    "Parameters": {
        "KeyName": {
            "Default": "d1se_key",
            "Description": "Name of Key-pair to use.",
            "Type": "String"
        },
        "PrivateApplicationSubnetId": {
            "AllowedPattern": "subnet-[0-9a-z]{8}",
            "Description": "Private Application Subnet Id",
            "Type": "String"
        },
		"PrivateIp": {
            "Description": "Mule Env Private IP",
            "Type": "String"
        },
        "VpcCidr": {
            "Default": "10.0.0.0/16",
            "Description": "ADOP Core VPC VPC Cidr e.g. 10.0.0.0/16",
            "Type": "String"
        },
        "VpcId": {
            "AllowedPattern": "vpc-[0-9a-z]{8}",
            "Description": "ADOP Core VPC id e.g. vpc-1234ab678",
            "Type": "String"
        }
    },
    "Resources": {
        "AFP4MuleEnvironmentEc2Instance": {
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "InstanceType": "t2.medium",
                "KeyName": {
                    "Ref": "KeyName"
                },
				"IamInstanceProfile" : {"Ref" : "IAMInstanceProfileMule"},
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "false",
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [{ "Ref": "MuleDefaultSecurityGroup" }, { "Ref": "MuleDockerSwarmSecurityGroup" }, { "Ref": "MuleDockerOverlaySecurityGroup" }],
                        "PrivateIpAddress": {"Ref": "PrivateIp"},
                        "SubnetId": { "Ref": "PrivateApplicationSubnetId" }
                    }
                ],
				"BlockDeviceMappings" : [
					{
						"DeviceName" : "/dev/xvda",
						"Ebs" : {
							"VolumeSize" : "20"
						}
					}
				],
				"UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "sudo su\n",
								"/sbin/resize2fs /dev/xvda\n",
                                "chmod 754 ${workspace}/env-creation-scripts/DevOpsScripts"
								//"aws s3 cp s3://d1sedemobucket3/DevOpsScripts/wrapperSetup.sh /home/ec2-user/wrapperSetup.sh \n",
								//"git clone https://pranjal.bhatnagar@innersource.accenture.com/scm/a2482/env-creation-scripts.git /home/ec2-user/env-creation-scripts/DevOpsScripts"
                                //"chmod 754 /home/ec2-user/env-creation-scripts/DevOpsScripts/wrapperSetup.sh \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/DevOpsScripts/wrapperSetup.sh \n",
								
								//"aws s3 cp s3://d1sedemobucket3/DevOpsScripts/swarmSetup.sh /home/ec2-user/swarm/swarmSetup.sh \n",
								//"chmod 754 /home/ec2-user/swarm/swarmSetup.sh \n",
								"sed -i -e 's/\r$//'  ${workspace}/mule_environment_template/env-creation-scripts/DevOpsScripts/swarmSetup.sh \n",
								
								//"aws s3 cp s3://d1sedemobucket3/SecurityScripts/seccomp/mule/swarm-seccomp.json /home/ec2-user/mule/swarm-seccomp.json \n",
								//"chmod 754 /home/ec2-user/mule/swarm-seccomp.json \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/seccomp/mule/swarm-seccomp.json \n",
								
                                //"aws s3 cp s3://d1sedemobucket3/DevOpsScripts/muleSetup.sh /home/ec2-user/mule/muleSetup.sh \n",
								//"chmod 754 /home/ec2-user/mule/muleSetup.sh \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/DevOpsScripts/muleSetup.sh \n",
								
								//"aws s3 cp s3://d1sedemobucket3/SecurityScripts/seccomp/mule/docker.accenture.com-afp4mule-mule_ee-seccomp.json /home/ec2-user/mule/docker.accenture.com-afp4mule-mule_ee-seccomp.json \n",
								//"chmod 754 /home/ec2-user/mule/docker.accenture.com-afp4mule-mule_ee-seccomp.json \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/seccomp/mule/docker.accenture.com-afp4mule-mule_ee-seccomp.json \n",
								
								//"aws s3 cp s3://d1sedemobucket3/SecurityScripts/seccomp/mule/docker.accenture.com-afp4mule-rabbitmq-seccomp.json /home/ec2-user/mule/docker.accenture.com-afp4mule-rabbitmq-seccomp.json \n",
								//"chmod 754 /home/ec2-user/mule/docker.accenture.com-afp4mule-rabbitmq-seccomp.json \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/seccomp/mule/docker.accenture.com-afp4mule-rabbitmq-seccomp.json \n",
								
								//"aws s3 cp s3://d1sedemobucket3/SecurityScripts/seccomp/mule/docker.accenture.com-afp4mule-mongodb-seccomp.json /home/ec2-user/mule/docker.accenture.com-afp4mule-mongodb-seccomp.json \n",
								//"chmod 754 /home/ec2-user/mule/docker.accenture.com-afp4mule-mongodb-seccomp.json \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/seccomp/mule/docker.accenture.com-afp4mule-mongodb-seccomp.json \n",
								
								//"aws s3 cp s3://d1sedemobucket3/DevOpsScripts/GlusterFS_Setup.sh /home/ec2-user/gluster/GlusterFS_Setup.sh \n",
								//"chmod 754 /home/ec2-user/gluster/GlusterFS_Setup.sh \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/DevOpsScripts/GlusterFS_Setup.sh \n",
								
								//"aws s3 cp s3://d1sedemobucket3/SecurityScripts/OS_Patching.sh /home/ec2-user/security/OS_patching.sh \n",
								//"chmod 754 /home/ec2-user/security/OS_patching.sh \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/OS_patching.sh \n",
								
								//"aws s3 cp s3://d1sedemobucket3/SecurityScripts/Antivirus.sh /home/ec2-user/security/Antivirus.sh \n",
								//"chmod 754 /home/ec2-user/security/Antivirus.sh \n",
								"sed -i -e 's/\r$//' ${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/Antivirus.sh \n",
								
								//"aws s3 cp s3://d1sedemobucket3/Certificates/ca.pem /home/ec2-user/.certs/ca.pem \n",
								"# sed -i -e 's/\r$//' ${workspace}//mule_environment_template/env-creation-scripts/SecurityScripts/certificates/ca.pem \n",
								
								//"aws s3 cp s3://d1sedemobucket3/Certificates/mule-priv-key.pem /home/ec2-user/.certs/key.pem \n",
								"# sed -i -e 's/\r$//' ${workspace}//mule_environment_template/env-creation-scripts/SecurityScripts/certificates/key.pem \n",
								
								//"aws s3 cp s3://d1sedemobucket3/Certificates/mule-cert.pem /home/ec2-user/.certs/cert.pem \n",
								"# sed -i -e 's/\r$//' ${workspace}//mule_environment_template/env-creation-scripts/SecurityScripts/certificates/cert.pem \n",
								
								//"aws s3 cp s3://d1sedemobucket3/Certificates/glusterCerts/client66.key /etc/ssl/glusterfs.key \n",
								"# sed -i -e 's/\r$//' ${workspace}//mule_environment_template/env-creation-scripts/SecurityScripts/certificates/GlusterFS/glusterfs.key \n",
								
								//"aws s3 cp s3://d1sedemobucket3/Certificates/glusterCerts/client66.pem /etc/ssl/glusterfs.pem \n",
								"# sed -i -e 's/\r$//' ${workspace}//mule_environment_template/env-creation-scripts/SecurityScripts/certificates/GlusterFS/glusterfs.pem \n",
								
								//"aws s3 cp s3://d1sedemobucket3/Certificates/glusterCerts/glusterfs.ca /etc/ssl/glusterfs.ca \n",
								"# sed -i -e 's/\r$//' ${workspace}//mule_environment_template/env-creation-scripts/SecurityScripts/certificates/GlusterFS/glusterfs.ca \n",
								
								"${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/OS_patching.sh \n",
								"${workspace}/mule_environment_template/env-creation-scripts/SecurityScripts/Antivirus.sh \n",
								"${workspace}/mule_environment_template/env-creation-scripts/DevOpsScripts/GlusterFS_Setup.sh -t client \n",
								"${workspace}/mule_environment_template/env-creation-scripts/DevOpsScripts/wrapperSetup.sh -t node -r mule \n",
								"\n"
                                
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "D1SE-Mule"
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "MuleDefaultSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enabling access to all IPs and below listed ports",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "tcp",
                        "ToPort": "65535"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "udp",
                        "ToPort": "65535"
                    }
                ],
                "SecurityGroupIngress": [
					{
                        "CidrIp": { "Ref": "VpcCidr" },
                        "FromPort": "7946",
                        "IpProtocol": "udp",
                        "ToPort": "7946"
                    },
					{
                        "CidrIp": { "Ref": "VpcCidr" },
                        "FromPort": "4789",
                        "IpProtocol": "udp",
                        "ToPort": "4789"
                    },
					{
                        "CidrIp": { "Ref": "VpcCidr" },
                        "FromPort": "0",
                        "IpProtocol": "tcp",
                        "ToPort": "65535"
                    }
                ],
                "VpcId": { "Ref": "VpcId" },
				"Tags": [
                    {
                        "Key": "Name",
                        "Value": "MuleDefaultSecurityGroup"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
		"MuleDockerSwarmSecurityGroup": {
            "Properties": {
                "GroupDescription": "Security Group which enables ports needed for Docker swarm",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "tcp",
                        "ToPort": "65535"
                    },
					                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "0",
                        "IpProtocol": "udp",
                        "ToPort": "65535"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "tcp",
						"FromPort": "2375",
                        "ToPort": "2375"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "tcp",
						"FromPort": "2376",
                        "ToPort": "2376"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "tcp",
						"FromPort": "2376",
                        "ToPort": "2376"
                    },
					{
                        "CidrIp": { "Ref": "VpcCidr" },
                        "FromPort": "3375",
                        "IpProtocol": "tcp",
                        "ToPort": "3376"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "udp",
						"FromPort": "4789",
                        "ToPort": "4789"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "tcp",
						"FromPort": "8300",
                        "ToPort": "8302"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "udp",
						"FromPort": "8301",
                        "ToPort": "8302"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "udp",
						"FromPort": "53",
                        "ToPort": "53"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "tcp",
						"FromPort": "8600",
                        "ToPort": "8600"
                    }
                ],
                "VpcId": { "Ref": "VpcId" },
				"Tags": [
                    {
                        "Key": "Name",
                        "Value": "MuleDockerSwarmSecurityGroup"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
		"MuleDockerOverlaySecurityGroup": {
            "Properties": {
                "GroupDescription": "Security Group which enables ports needed for Docker Overlay networking",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "udp",
						"FromPort": "4789",
                        "ToPort": "4789"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
						"IpProtocol": "udp",
						"FromPort": "7946",
                        "ToPort": "7946"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
						"IpProtocol": "tcp",
						"FromPort": "7946",
                        "ToPort": "7946"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "10.0.0.0/16",
                        "IpProtocol": "udp",
						"FromPort": "4789",
                        "ToPort": "4789"
                    },
                    {
                        "CidrIp": "10.0.0.0/16",
						"IpProtocol": "udp",
						"FromPort": "7946",
                        "ToPort": "7946"
                    },
					{
                        "CidrIp": "10.0.0.0/16",
						"IpProtocol": "tcp",
						"FromPort": "7946",
                        "ToPort": "7946"
                    }
                ],
                "VpcId": { "Ref": "VpcId" },
				"Tags": [
                    {
                        "Key": "Name",
                        "Value": "MuleDockerOverlaySecurityGroup"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
		"IAMRoleMule": {
			"Properties": {
				"AssumeRolePolicyDocument": { 
					"Version" : "2012-10-17",
					"Statement": [ {
						"Effect": "Allow",
						"Principal": { "Service": [ "ec2.amazonaws.com" ] },
					"Action": [ "sts:AssumeRole" ]
					} ] 
				},
				"Path": "/",
				"Policies": [ {
					"PolicyName": "D1SEDefaultBucketAccess",
					"PolicyDocument": {
						"Version" : "2012-10-17",
						"Statement": [ {
							"Effect": "Allow",
							"Action": ["s3:ListAllMyBuckets", "s3:ListBucket", "s3:GetObject"],
							"Resource": "*"
						} ]
					}
				} ]
			},
			"Type": "AWS::IAM::Role"
		},
		"IAMInstanceProfileMule": {
			"Properties": {
				"Path": "/",
				"Roles":  [{ "Ref": "IAMRoleMule" }]
			},
			"Type": "AWS::IAM::InstanceProfile"
		}
    }
}
